Pairwise testing

1)	Суть метода
Как гласит перевод pairwise testing - это попарное тестирование, и заключается в формирование таких наборов данных, в которых каждое тестируемое значение каждого из проверяемых параметров хотя бы единожды сочетается с каждым тестируемым значением всех остальных проверяемых параметров.
Но для полного понимания лучше привести пример. Допустим мы имеем параметры X,Y,Z принимающие значения True или False. При полном переборе всех возможных комбинаций потребуется 8 итераций:
	  X	    Y	    Z
1.	True 	True 	True
2.	True	True	False
3.	True	False	True
4.	True	False	False
5.	False	True 	True
6.	False	True	False
7.	False	False	True
8.	False	False	False
Однако если проверять входные данные с помощью pairwise testing, то можно сократить количество итераций до 4. Предварительно сформируем попарные таблицы:
	  X	    Y		    X	    Z		    Y	    Z
1.	True	True		True	True		True	True
2.	True 	False		True 	False		True 	False
3.	False	True		False	True		False	True
4.	False	False		False	False		False	False

Теперь необходимо перейти к формированию итоговой таблицы:
	  X	    Y	    Z
1.	True 	True 	False
2.	True	False	True
3.	False	True	True
4.	False	False	False
Проверим получившийся результат: 
  •	1 строчка XYZ включает в себя следующие пары: 
    o	1 из XY; 
    o	2 из XZ;
    o	2 из YZ.
  •	2 строчка XYZ включает в себя следующие пары:
    o	2 из XY; 
    o	1 из XZ;
    o	3 из YZ.
  •	3 строчка XYZ включает в себя следующие пары:
    o	3 из XY; 
    o	3 из XZ;
    o	1 из YZ.
  •	4 строчка XYZ включает в себя следующие пары:
    o	4 из XY; 
    o	4 из XZ;
    o	4 из YZ.
Как мы видим по результатам, итоговая таблица содержит все парные комбинации параметров X,Y,Z. 
В этом и заключается суть данного метода - мы не производим проверку всех сочетания всех параметров, а лишь проверяем все пары параметров.
Из приведённого примера может показаться, что разница с полным перебором не так уж и велика, однако это справедливо только для простого примера, к тому же его главной задачей было показать суть метода, а ни его производительность.
И всё же для задачи с 10 параметрами содержащими только два значения: True или False потребуется провести 2^10=1024 итерации для полного перебора и всего лишь 6 для  pairwise testing. Однако тут встаёт вопрос о трудоёмкости формирования этих самых 6 комбинаций, но на сайте "http://www.pairwise.org/" в разделе "Available Tools", находится множество ответов, разной степени стоимости и продуктивности, на него

2)	Решаемые задачи 
Немного разобравшись с самим методом, можно переходить к вопросу о его использовании. И разобраться, где же его целесообразнее использовать.
И так, из алгоритма работы метода можно заключить что он организовывает попарное сравнение каких либо параметров. Следовательно такой тип тестирования целесообразно применять, когда на вход поступает два или более взаимодействующих параметров. 
Здесь особое внимание необходимо уделить тому факту, что входные параметры должны взаимодействовать. Это значит что на результат должны оказывать влияние комбинации параметров, а не параметры по отдельности. Пример: Курс по тестированию считается завершённым при наличии всех ДЗ, курсового проекта и посещения лекций. На результат влияют все три параметра, нельзя сказать, что курс был успешно завершён, приняв во внимание только один из параметров.

3)	Не решаемые задачи
Можно резюмировать, что в список не решаемых данным методом задач, необходимо внести те, входные параметры которых не взаимодействуют.
Пример: Форма регистрации. Мы имеем множество полей, но они не взаимодействуют. Максимум мы получим ошибку если пользователь с таким логином уже присутствует в системе, но не более.
И конечно же, как уже можно было догадаться, если ошибка возникает при сочетании трёх, четырёх или более параметров, то pairwise testing вполне может её пропустить, так как покрывает далеко не все возможные комбинации параметров, а только попарные.

